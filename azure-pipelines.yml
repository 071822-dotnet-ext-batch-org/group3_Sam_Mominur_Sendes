# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4
#pr: none #What is pr?

#trigger: # sets a trigger on main for any change made to main
#- main
pr: none #pr means the trigger wont go off for ANY change to main branch
trigger: #To specify which thing in the branch to trigger a run
  branches:
    include: #Will SEARCH on main for the path to trigger
      - main  
  paths:
    include:
      - OFFICIAL_PROJECT2 # This entir sectio here is made to trigger on any changes
      #to the path OFFICIAL_PROJECT2

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'OFFICIAL_PROJECT2/Project2.sln' # this is the path to your sln file in proj - relative path in your repo
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'


# stages: #This is the build stage
#   -stage: prep
#     jobs: 
#       -job: sdk_download # the job to download correct SDK
#         displayName: download the most up to date SDK for Dotnet Core
#         steps:
#         - task: UseDotNet@2
#           inputs:
#             packageType: 'sdk'
#             version: '6.x'
#   -stage: build
#     jobs:
#     -job: build the app
#       steps:
#       - task: DotNetCoreCLI@2
#         inputs:
#           command: 'custom'
#           projects: '$(solution)'
#   -stage: Test
#     jobs:
#     -job: Test the app
#       steps:
#       - task: DotNetCoreCLI@2
        # inputs:
        #   command: 'test'
        #   projects: '$(solution)'
steps:   
- task : NuGetToolInstaller@1    

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)' # building solution

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
